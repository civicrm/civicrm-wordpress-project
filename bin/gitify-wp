#!/bin/bash

## Take an existing, tar-based CiviCRM directory and convert it to a git working directory

#### Helpers ####

###########################################
## usage: do_gitify <repo-url> <existing-dir> [git-checkout-options]
function do_gitify() {
  REPO="$1"
  TGT="$2"
  TMP="${TGT}.tmp"
  shift 2

  if [ -d "$TGT/.git" ]; then
    echo "[[Already checked out git repo ($TGT) -- skip $REPO]]"
    return
  fi
  [ -d $TGT ] || mkdir -p "$TGT"
  [ -d $TMP ] && rm -rf "$TMP"
  echo "[[Checkout $REPO ($TMP)]]"
  echo "[git clone "$@" "$REPO" "$TMP"]"
  git clone "$@" "$REPO" "$TMP"

  echo "[[Swap metadata]]"
  mv "$TMP/.git" "$TGT/.git"

  echo "[[Remove local modifications]]"
  pushd "$TGT" > /dev/null
  git checkout -- .
  popd > /dev/null

  rm -rf "$TMP"
}

###########################################
## add hook shims to a repo
## usage: do_hookify <canonical-repo-name> <repo-path> <relative-hook-path>
function do_hookify() {
  GIT_CANONICAL_REPO_NAME="$1"
  TGT="$2"
  HOOK_DIR="$3"
  if [ -n "$CIVICRM_GIT_HOOKS" ]; then
    echo "[[Install recommended hooks ($TGT)]]"
    for HOOK in commit-msg post-checkout post-merge pre-commit prepare-commit-msg post-commit pre-rebase post-rewrite ;do
          cat << TMPL > "$TGT/.git/hooks/$HOOK"
#!/bin/bash
if [ -f "\$GIT_DIR/${HOOK_DIR}/${HOOK}" ]; then
  ## Note: GIT_CANONICAL_REPO_NAME was not provided by early hook-stubs
  export GIT_CANONICAL_REPO_NAME="$GIT_CANONICAL_REPO_NAME"
  source "\$GIT_DIR/${HOOK_DIR}/${HOOK}"
fi
TMPL
      chmod +x "$TGT/.git/hooks/$HOOK"
    done
  else
    echo "[[Skip hook installation ($TGT) -- use \"--hooks\" to enable]]"
  fi
}

###########################################
## Create or update the URL of a git remote
## usage: git_set_remote <local-repo-path> <remote-name> <remote-url>
function git_set_remote() {
  REPODIR="$1"
  REMOTE_NAME="$2"
  REMOTE_URL="$3"
  echo "[[Set remote ($REMOTE_NAME => $REMOTE_URL within $REPODIR)]]"

  pushd "$REPODIR" >> /dev/null
    git remote set-url "$REMOTE_NAME"  "$REMOTE_URL" >/dev/null 2>&1 || git remote add "$REMOTE_NAME"  "$REMOTE_URL"
  popd >> /dev/null
}

###########################################
## usage: do_svnify <repo-url> <existing-dir>
function do_svnify() {
  REPO="$1"
  TGT="$2"
  shift 2

  if [ -d "$TGT/.svn" ]; then
    echo "[[Already checked out SVN repo ($TGT) -- skip $REPO]]"
    return
  fi
  [ -d $TGT ] || mkdir -p "$TGT"
  [ -d $TMP ] && rm -rf "$TMP"
  echo "[[Checkout $REPO ($TMP)]]"

  echo "[svn co \"$REPO\" \"$TGT\"]"
  svn co "$REPO" "$TGT"
}

###########################################
## usage: do_gencode <civicrm-path>
function do_gencode() {
  pushd "$1/xml" > /dev/null
    if [ -f "GenCode.php" ]; then
      echo "[[Generate files]]"
      php GenCode.php
    else
      echo "[[Skip \"Generate files\"]]"
    fi
  popd > /dev/null
}

###########################################
## config_repo <repo-name> <local-path> <default-branch> <git-scripts-path>
##                  1            2              3               4
function config_repo() {
  do_gitify "${UPSTREAM_GIT_BASE_URL}/${1}.git" "$2" -b "$3"
  do_hookify "$1" "$2" "$4"
  ## doesn't work with http -- git ls-remote "git://github.com/civicrm/civicrm-drupalz.git" HEAD --exit-code &>- ; echo $?
  if [ -n "$FORK_GIT_BASE_URL" ]; then
    git_set_remote "$2" upstream "${UPSTREAM_GIT_BASE_URL}/${1}.git"
    git_set_remote "$2" origin "${FORK_GIT_BASE_URL}/${1}.git"
  else
    git_set_remote "$2" origin "${UPSTREAM_GIT_BASE_URL}/${1}.git"
  fi
}

function check_dep() {
  if [ -z "`which git`" ]; then
    echo "command not found: git"
    exit 3
  fi
  if [ -z `which php` ]; then
    echo "command not found: php"
  fi
}

###########################################
#### Main: Parse arguments

set -e

CIVICRM_ROOT=""
CIVICRM_L10N=""
CIVICRM_GIT_HOOKS=""
CIVICRM_BRANCH="master"
FORK_GIT_BASE_URL=""
UPSTREAM_GIT_BASE_URL="https://github.com/civicrm"

while [ -n "$1" ]; do
  if [ "$1" == "--l10n" ]; then
    CIVICRM_L10N="$1"
  elif [ "$1" == "--hooks" ]; then
    CIVICRM_GIT_HOOKS="$1"
  elif [ "$1" == "--upstream" ]; then
    shift
    UPSTREAM_GIT_BASE_URL="$1"
  elif [ "$1" == "--fork" ]; then
    shift
    FORK_GIT_BASE_URL="$1"
  elif [ -z "$CIVICRM_ROOT" ]; then
    ## Third arg
    CIVICRM_ROOT="$1"
  else
    echo "unrecognized argument: $1"
    exit 2
  fi
  shift
done

if [ -z "$CIVICRM_ROOT" -o ! -d "$CIVICRM_ROOT" -o -z "$UPSTREAM_GIT_BASE_URL" ]; then
  echo "Convert a directory into a set of CiviCRM git clones"
  echo "usage: $0 <existing-civicrm-root> [--fork <base-url>] [--upstream <base-url>] [--l10n] [--hooks]"
  echo "  <existing-civicrm-root>: the main directory containing CiviCRM"
  echo "  --upstream <base-url>: specify the base URL for upstream repositories"
  echo "  --fork <base-url>: specify the base URL for your personal fork repositories"
  echo "  --l10n: optionally fetch localization data; currently requires svn"
  echo "  --hooks: optionally install recommended git hooks; the hooks are mostly"
  echo "           tested with git CLI under Linux and OSX; they haven't been"
  echo "           tested with git GUIs or Windows"
  echo ""
  echo "Note: If pointing to a pre-existing directory, your local changes may be replaced by"
  echo "the pristine code from git/svn. If you've made changes, then make sure there's a backup!"
  echo ""
  echo "example: $0 /var/www/wp/wp-content/plugins/civicrm"
  echo ""
  echo "example: $0 /var/www/wp/wp-content/plugins/civicrm --upstream git@github.com:civicrm --l10n"
  echo "  (checkout core code using ssh; checkout l10n)"
  exit 1
fi

###########################################
#### Main: Update git repo metadata ####
check_dep

## config_repo <repo-name>         <local-path>                     <default-branch>      <git-scripts-path>
config_repo     civicrm-wordpress  "$CIVICRM_ROOT"                  "$CIVICRM_BRANCH"      "../civicrm/tools/scripts/git"
config_repo     civicrm-core       "$CIVICRM_ROOT/civicrm"          "$CIVICRM_BRANCH"      "../tools/scripts/git"
config_repo     civicrm-packages   "$CIVICRM_ROOT/civicrm/packages" "$CIVICRM_BRANCH"      "../../tools/scripts/git"

if [ "$CIVICRM_L10N" == "--l10n" ]; then
  do_svnify "http://svn.civicrm.org/l10n/trunk" "$CIVICRM_ROOT/l10n"
fi

do_gencode "$CIVICRM_ROOT/civicrm"
